name: Deploy

on:
  push:
    branches: [main]

jobs:
  
  
  # Prod: Terraform Steps
  terraform-prod:
    runs-on: ubuntu-18.04
    steps:
      # Checkout
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: "Prod: Prepare Terraform Files"
        run: |
          echo 'hello' > me.txt
        env:
          AWS_ACCESS_KEY_ID: AKIAQOHUDTPQNAZOKHML
          AWS_SECRET_ACCESS_KEY: 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
      - name: "Prod: Terraform Init"
        run: cd terraform/ && terraform init -backend-config="access_key=AKIAQOHUDTPQNAZOKHML" -backend-config="secret_key=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"
        env:
          AWS_ACCESS_KEY_ID: AKIAQOHUDTPQNAZOKHML
          AWS_SECRET_ACCESS_KEY: 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
      - name: "Prod: Terraform Apply"
        run: cd terraform/ && terraform apply -no-color -auto-approve
        env:
          AWS_ACCESS_KEY_ID: AKIAQOHUDTPQNAZOKHML
          AWS_SECRET_ACCESS_KEY: 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



  # Prod: Serverless Steps
  serverless-prod:
    needs: terraform-prod
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: .
    steps:
      # Checkout
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: "Prod: Install Serverless"
        run: |
          sudo npm install -g serverless
          npm install --save-dev serverless-stack-termination-protection
          sls plugin install -n serverless-python-requirements
      - name: "Prod: Prepare Serverless Files"
        run: |
          BUCKET_ENV=prod
          APP_STACK_NAME=test
          APP_SERVICE_NAME=test

          sed -i 's|\$\$bucket_env\$\$|'"$BUCKET_ENV"'|g' serverless.yml
          sed -i 's|\$\$pr_env\$\$|'"$BUCKET_ENV"'|g' serverless.yml
          sed -i 's|\$\$stackName\$\$|'"$APP_STACK_NAME"'|g' serverless.yml
          sed -i 's|\$\$serviceName\$\$|'"$APP_SERVICE_NAME"'|g' serverless.yml

          LOG_GROUP=prod
          sed -i 's|\$\$logGroup\$\$|'"$LOG_GROUP"'|g' serverless.yml
        env:
          AWS_ACCESS_KEY_ID: AKIAQOHUDTPQNAZOKHML
          AWS_SECRET_ACCESS_KEY: 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
      - name: "Prod: Serverless Deploy"
        run: |
          pip install pipenv==2018.11.26
          sls deploy --stage prod
        env:
          AWS_ACCESS_KEY_ID: AKIAQOHUDTPQNAZOKHML
          AWS_SECRET_ACCESS_KEY: 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
