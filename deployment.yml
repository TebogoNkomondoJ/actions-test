name: Deploy

on:
  push:
    branches: [master]

jobs:
  
  
  # Prod: Terraform Steps
  terraform-prod:
    runs-on: ubuntu-18.04
    steps:
      # Checkout
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: "Prod: Prepare Terraform Files"
        run: |
          APP_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ROLE_RESPONSE=$(aws sts assume-role --role-arn arn:aws:iam::037865805188:role/terraform_role --role-session-name ci-session --output json)
          export AWS_ACCESS_KEY_ID=ASIAQRUH2KWCGM56HROX
          export AWS_SECRET_ACCESS_KEY=GIRR0U3VuSGGKB/4LJIpTT/+wp5ED5Y7OBLPKSX2
          export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' <<< "$ROLE_RESPONSE")

          APP_ENV=prod

          sed -i 's|\$\$env\$\$|'"$APP_ENV"'|g' terraform/depl.tf
          sed -i 's|\$\$accountId\$\$|'"$APP_ACCOUNT_ID"'|g' terraform/depl.tf
          

        env:
          AWS_ACCESS_KEY_ID: ASIAQRUH2KWCGM56HROX
          AWS_SECRET_ACCESS_KEY: GIRR0U3VuSGGKB/4LJIpTT/+wp5ED5Y7OBLPKSX2
      - name: "Prod: Terraform Init"
        run: cd terraform/ && terraform init
        env:
          AWS_ACCESS_KEY_ID: ASIAQRUH2KWCGM56HROX
          AWS_SECRET_ACCESS_KEY: GIRR0U3VuSGGKB/4LJIpTT/+wp5ED5Y7OBLPKSX2
      - name: "Prod: Terraform Apply"
        run: cd terraform/ && terraform apply -no-color -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ASIAQRUH2KWCGM56HROX
          AWS_SECRET_ACCESS_KEY: GIRR0U3VuSGGKB/4LJIpTT/+wp5ED5Y7OBLPKSX2



  # Prod: Serverless Steps
  serverless-prod:
    needs: terraform-prod
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: .
    steps:
      # Checkout
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: "Prod: Install Serverless"
        run: |
          sudo npm install -g serverless
      - name: "Prod: npm Install"
        run: |
          npm install
      - name: "Prod: Prepare Serverless Files"
        run: |
          BUCKET_ENV=prod
          APP_STACK_NAME=test
          APP_SERVICE_NAME=test

          sed -i 's|\$\$bucket_env\$\$|'"$BUCKET_ENV"'|g' serverless.yml
          sed -i 's|\$\$pr_env\$\$|'"$BUCKET_ENV"'|g' serverless.yml
          sed -i 's|\$\$stackName\$\$|'"$APP_STACK_NAME"'|g' serverless.yml
          sed -i 's|\$\$serviceName\$\$|'"$APP_SERVICE_NAME"'|g' serverless.yml

          LOG_GROUP=prod
          sed -i 's|\$\$logGroup\$\$|'"$LOG_GROUP"'|g' serverless.yml
        env:
          AWS_ACCESS_KEY_ID: ASIAQRUH2KWCGM56HROX
          AWS_SECRET_ACCESS_KEY: GIRR0U3VuSGGKB/4LJIpTT/+wp5ED5Y7OBLPKSX2
      - name: "Prod: Serverless Deploy"
        run: |
          pip install pipenv==2018.11.26
          sls deploy --stage prod
        env:
          AWS_ACCESS_KEY_ID: ASIAQRUH2KWCGM56HROX
          AWS_SECRET_ACCESS_KEY: GIRR0U3VuSGGKB/4LJIpTT/+wp5ED5Y7OBLPKSX2
